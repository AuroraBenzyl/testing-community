name : Sync Contributors and Roadmap

on:
  schedule:
    - cron: '0 0 * * *' # Run at midnight every day
  workflow_dispatch:

jobs:
    sync-contributors-data:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository  
          uses: actions/checkout@v4

        - name: Get Token 
          uses: actions/create-github-app-token@v1
          id: get_workflow_token
          with:
            app-id: ${{ vars.APPLICATION_ID }}
            private-key: ${{ secrets.APP_PRIVATE_KEY }}

        - name: Fetch Contributors data
          uses: actions/github-script@v7
          env:
            ORGS: ${{ github.repository_owner }}
            REPO: ${{ github.event.repository.name }}
          with:
            github-token: ${{ steps.get_workflow_token.outputs.token }}
            script: |
              const fs = require('fs');
              
              let data = await github.paginate(github.rest.repos.listContributors, {
                owner: process.env.ORGS,
                repo: process.env.REPO,
                per_page: 100,
                headers: {
                  "X-GitHub-Api-Version": "2022-11-28",
                },
              });
              
              // Filter the data to get only the required fields
              data = data.map(({ login, id, avatar_url, html_url, contributions }) => 
                ({ login, id, avatar_url, html_url, contributions }));
              
              // Store the data in a file
              fs.writeFileSync('community.json', JSON.stringify(data, null, 2));
            
        - name: Commit changes
          env:
            GITHUB_APP_TOKEN: ${{ steps.get_workflow_token.outputs.token }}
          run: |
            git config user.name "the-json-schema-bot[bot]"
            git config user.email "the-json-schema-bot[bot]@users.noreply.github.com"
            git add community.json
            git diff --quiet && git diff --staged --quiet || (git commit -m "chore(community): update community.json" && git pull --rebase && git push "https://x-access-token:${GITHUB_APP_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" master)


    sync-roadmap-data:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
                 
            - name: Get Token 
              uses: actions/create-github-app-token@v1
              id: get_workflow_token
              with:
                app-id: ${{ vars.APPLICATION_ID }}
                private-key: ${{ secrets.APP_PRIVATE_KEY }}
      
            # fetch project data and store it in a file
            - name: Fetch project data
              env:
                GH_TOKEN:  ${{ steps.get_workflow_token.outputs.token }} # GitHub App token stored in secrets
                PROJECT_ID: ${{vars.PROJECT_ID}} # Project ID
              run: |
                gh api graphql -f query='
                query($PROJECT_ID : ID!) {
                  node(id: $PROJECT_ID) {
                    ... on ProjectV2 {
                      items(first: 20) {
                        nodes {
                          id
                          fieldValues(first: 8) {
                            nodes {
                              ... on ProjectV2ItemFieldTextValue {
                                text
                                field {
                                  ... on ProjectV2FieldCommon {
                                    name
                                  }
                                }
                              }
                              ... on ProjectV2ItemFieldDateValue {
                                date
                                field {
                                  ... on ProjectV2FieldCommon {
                                    name
                                  }
                                }
                              }
                              ... on ProjectV2ItemFieldSingleSelectValue {
                                name
                                field {
                                  ... on ProjectV2FieldCommon {
                                    name
                                  }
                                }
                              }
                            }
                          }
                          content {
                            ... on DraftIssue {
                              title
                              body
                            }
                            ... on Issue {
                              title
                              assignees(first: 10) {
                                nodes {
                                  login
                                }
                              }
                            }
                            ... on PullRequest {
                              title
                              assignees(first: 10) {
                                nodes {
                                  login
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }' -f PROJECT_ID=$PROJECT_ID | jq '.data.node.items.nodes' > project_data.json
          
            # commit updated project data
            - name: Commit changes
              env:
                GITHUB_APP_TOKEN: ${{ steps.get_workflow_token.outputs.token }}
              run: |
                git config user.name "the-json-schema-bot[bot]"
                git config user.email "the-json-schema-bot[bot]@users.noreply.github.com"
                git add project_data.json
                git diff --quiet && git diff --staged --quiet || (git commit -m "chore(project_data): update project_data.json" && git pull --rebase && git push "https://x-access-token:${GITHUB_APP_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" master)
            
            

  
